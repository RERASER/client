// GENERATED BY npm build
// DO NOT MODIFY

#pragma once
#include <map>
#include <string>
#include <saucer/webview.hpp>

#define WIN32_LEAN_AND_MEAN
#include <Windows.h>

#include <utils/compression.hpp>
#include <utils/memory.hpp>

#include "resource.hpp"

namespace laochan::embedded
{
    auto read_resource(const int id)
    {
        auto* const res = FindResource(nullptr, MAKEINTRESOURCE(id), RT_RCDATA);
        if (!res) throw std::runtime_error{ "unable to load resource" };

        auto* const handle = LoadResource(nullptr, res);
        if (!handle) throw std::runtime_error{ "unable to load resource" };

        return std::span<const std::uint8_t>(reinterpret_cast<std::uint8_t*>(LockResource(handle)), SizeofResource(nullptr, res));
    }

    auto read_resource_zstd(const int id)
    {
        auto resource = read_resource(id);

        auto decompressed = utils::compression::zstd::decompress(std::string{ LPSTR(resource.data()), resource.size()});
        auto buf = utils::memory::allocate<uint8_t>(decompressed.size());
        std::memcpy(buf, decompressed.data(), decompressed.size());

        return std::span<uint8_t>{ buf, decompressed.size() };
    }

    inline auto all()
    {
        std::map<std::string, saucer::embedded_file> rtn;

        rtn.emplace("favicon.ico", saucer::embedded_file{"image/vnd.microsoft.icon", read_resource_zstd(ID_ASSET_0)});

        auto root = read_resource_zstd(ID_ASSET_1);
        rtn.emplace("index.html", saucer::embedded_file{"text/html", root});
        rtn.emplace("", saucer::embedded_file{"text/html", root});

        rtn.emplace("assets/ddr_bg-fLY37mO8.jpg", saucer::embedded_file{"image/jpeg", read_resource_zstd(ID_ASSET_2)});
        rtn.emplace("assets/gitadora-cQ1BqJ9U.webm", saucer::embedded_file{"video/webm", read_resource_zstd(ID_ASSET_3)});
        rtn.emplace("assets/howler-DR5KLX7K.js", saucer::embedded_file{"text/javascript", read_resource_zstd(ID_ASSET_4)});
        rtn.emplace("assets/iidx-DT5rYYhv.jpg", saucer::embedded_file{"image/jpeg", read_resource_zstd(ID_ASSET_5)});
        rtn.emplace("assets/index-BPsTT9Om.js", saucer::embedded_file{"text/javascript", read_resource_zstd(ID_ASSET_6)});
        rtn.emplace("assets/index-ClnFtsrN.css", saucer::embedded_file{"text/css", read_resource_zstd(ID_ASSET_7)});
        rtn.emplace("assets/moai-bg-B0rTMPYn.jpg", saucer::embedded_file{"image/jpeg", read_resource_zstd(ID_ASSET_8)});
        rtn.emplace("assets/msyhsb-teYSJU3-.woff2", saucer::embedded_file{"font/woff2", read_resource_zstd(ID_ASSET_9)});
        rtn.emplace("assets/num-DOiIrgmq.jpg", saucer::embedded_file{"image/jpeg", read_resource_zstd(ID_ASSET_10)});
        rtn.emplace("assets/num-z0VsZKpR.mp3", saucer::embedded_file{"audio/mpeg", read_resource_zstd(ID_ASSET_11)});
        rtn.emplace("assets/sdvx-Dhf-gkrM.jpg", saucer::embedded_file{"image/jpeg", read_resource_zstd(ID_ASSET_12)});
        rtn.emplace("assets/sgm-BpMyBNft.woff2", saucer::embedded_file{"font/woff2", read_resource(ID_ASSET_13)});

        return rtn;
    }
}

